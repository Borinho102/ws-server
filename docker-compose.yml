version: '3.8'

services:
  # Application
  app:
    # Pour dev: build local, pour prod: utiliser l'image du registry
    build:
      context: .
      target: ${BUILD_TARGET:-development}
    # En production, décommenter et utiliser l'image du registry :
    # image: ghcr.io/your-username/your-repo:develop
    ports:
      - "3000:3000"
    volumes:
      # En dev: monter le code source
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - WEBSOCKET_URL=http://ws-server:4000
      - NODE_ENV=${NODE_ENV:-development}
      - MONGODB_URI=mongodb://admin:${MONGO_ROOT_PASSWORD}@mongodb:27017/wivroosearch_dev?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=http://localhost:3000
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN}
      - WHATSAPP_PHONE_NUMBER_ID=${WHATSAPP_PHONE_NUMBER_ID}
      - META_GRAPH_API_URL=${META_GRAPH_API_URL:-https://graph.facebook.com/v22.0}
      - MINIO_HOST=${MINIO_HOST}
      - MINIO_REGION=${MINIO_REGION}
      - MINIO_ACCESS_ID=${MINIO_ACCESS_ID}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - wivroosearch-network
    restart: unless-stopped
    stdin_open: true
    tty: true

  ws-server:
    build:
      context: .
      dockerfile: src/ws/Dockerfile
    command: npm run start
    restart: unless-stopped
    networks:
      - wivroosearch-network
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}

  # Base de données MongoDB
  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=wivroosearch_dev
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init-dev.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - wivroosearch-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Initialisation des catégories
  category-init:
    image: mongo:7.0
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - ./init-categories.js:/init-categories.js:ro
    networks:
      - wivroosearch-network
    command: >
      mongosh --host mongodb:27017 
      -u admin 
      -p ${MONGO_ROOT_PASSWORD} 
      --authenticationDatabase admin 
      wivroosearch_dev 
      /init-categories.js
    restart: "no"

  # Interface MongoDB (optionnel)
  mongo-express:
    image: mongo-express:1.0.0
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - wivroosearch-network
    restart: unless-stopped
    profiles: ["admin"] # Démarrer seulement avec --profile admin

volumes:
  mongodb_data:
    driver: local

networks:
  wivroosearch-network:
    driver: bridge